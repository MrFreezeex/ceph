[tox]
envlist = grafonnet-{check,fix},lint,promql-query-test,jsonnet-lint,alerts-check
skipsdist = true

[testenv:jsonnet-bundler-{install,update}]
whitelist_externals =
    jb
description =
    install: Install the jsonnet dependencies
    update: Update the jsonnet dependencies
commands =
    install: jb install
    update: jb update

[testenv:grafonnet-{check,fix}]
basepython = python3
whitelist_externals =
    jsonnet
    jb
    sh
description =
    check: Ensure that auto-generated grafana dashboard files matches the current version
    fix: generate dashboard json files from jsonnet file with latest changes
deps =
    -rrequirements-grafonnet.txt
depends = jsonnet-bundler-install
commands =
     check: sh test-jsonnet.sh
     fix: jsonnet -J vendor -m output/dashboards dashboards.jsonnet
          jsonnet -J vendor -S alerts.jsonnet -o output/alerts/ceph_default_alerts.yml

[testenv:jsonnet-lint]
whitelist_externals =
    sh
    find
    jsonnetfmt
description =
    Run jsonnet linter
depends = jsonnet-bundler-install
commands =
    ./lint-jsonnet.sh --test

[testenv:lint]
description =
     Run linters
deps =
     -rrequirements-lint.txt
setenv =
commands =
    pylint --rcfile=.pylintrc tests_dashboards
    mypy tests_dashboards
    isort tests_dashboards

[testenv:promql-query-test]
description =
     Run promtool unit testing on grafana queries.
deps =
    -rrequirements-alerts.txt
depends = grafonnet-check
setenv =
commands =
    behave tests_dashboards/features 

[testenv:alerts-check]
deps =
    -rrequirements-alerts.txt
    pytest
depends = grafonnet-check
commands =
    pytest -rA tests_alerts/test_syntax.py tests_alerts/test_unittests.py
    ./tests_alerts/validate_rules.py
